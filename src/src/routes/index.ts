import { Router } from 'express';
import { EmpresaController } from '../controllers/EmpresaController';
import { ServicoController } from '../controllers/ServicoController';
import { AgendamentoController } from '../controllers/AgendamentoController';
import { UsuarioController } from '../controllers/UsuarioController';
import { CashbackController } from '../controllers/CashbackController';
import { FuncionarioController } from '../controllers/FuncionarioController';
import authMiddleware from '../middlewares/authMiddleware';
import upload from '../middlewares/uploadMiddleware';
import { RelatorioController } from '../controllers/RelatorioController';
import { AvaliacaoController } from '../controllers/AvaliacaoController';
import { CepController } from '../controllers/CepController';
import { CondicaoPagamentoController } from '../controllers/CondicaoPagamentoController';
import { OrcamentoController } from '../controllers/OrcamentoController';
import { VeiculoController } from '../controllers/VeiculoController';
import { FiscalController } from '../controllers/FiscalController';
import { FormaPagamentoController } from '../controllers/FormaPagamentoController';
import { GrupoController } from '../controllers/GrupoController';
import { ProdutoController } from '../controllers/ProdutoController';
import { FornecedorController } from '../controllers/FornecedorController';
import { ServicoGrupoController } from '../controllers/ServicoGrupoController';
import { NotaFiscalController } from '../controllers/NotaFiscalController';
import { ComissaoController } from '../controllers/ComissaoController';
import { CnpjController } from '../controllers/CnpjController';
import { EstoqueController } from '../controllers/EstoqueController';
import { FechamentoEstoqueController } from '../controllers/FechamentoEstoqueController';

const routes = Router();
const empresaController = new EmpresaController();
const servicoController = new ServicoController();
const agendamentoController = new AgendamentoController();
const usuarioController = new UsuarioController();
const cashbackController = new CashbackController();
const funcionarioController = new FuncionarioController();
const relatorioController = new RelatorioController();
const avaliacaoController = new AvaliacaoController();
const cepController = new CepController();
const condicaoPagamentoController = new CondicaoPagamentoController();
const orcamentoController = new OrcamentoController();
const veiculoController = new VeiculoController();
const fiscalController = new FiscalController();
const formaPagamentoController = new FormaPagamentoController();
const grupoController = new GrupoController();
const produtoController = new ProdutoController();
const fornecedorController = new FornecedorController();
const servicoGrupoController = new ServicoGrupoController();
const notaFiscalController = new NotaFiscalController();
const comissaoController = new ComissaoController();
const cnpjController = new CnpjController();
const estoqueController = new EstoqueController();
const fechamentoEstoqueController = new FechamentoEstoqueController(); 

// --- ROTAS PÚBLICAS ---
routes.post('/empresas', upload.single('logo'), empresaController.create);
routes.get('/empresas', empresaController.listAll);
routes.get('/empresas/:id/servicos', servicoController.listByEmpresaFromPublic);
routes.get('/funcionarios/empresa/:id', funcionarioController.listByEmpresaFromPublic);
routes.get('/empresas/:id/avaliacoes', avaliacaoController.listByEmpresa);
routes.get('/empresas/:id/horarios-disponiveis', agendamentoController.getHorariosDisponiveis);
routes.get('/empresas/:id/promocoes', cashbackController.listActivePromotionsForClient);
routes.post('/usuarios', usuarioController.create);
routes.post('/login/empresa', empresaController.login);
routes.post('/login/usuario', usuarioController.login);
routes.get('/cep/:cep', cepController.consultar);
routes.get('/cnpj/:cnpj', cnpjController.consultar);
routes.get('/fiscal/ncm', fiscalController.searchNcm);
routes.get('/veiculos/marcas', veiculoController.getMarcas);
routes.get('/veiculos/marcas/:marcaId/modelos', veiculoController.getModelos);
routes.get('/veiculos/marcas/:marcaId/modelos/:modeloId/anos', veiculoController.getAnos);

// --- APLICAÇÃO DO MIDDLEWARE DE AUTENTICAÇÃO ---
routes.use(authMiddleware);

// --- ROTAS PRIVADAS ---
routes.get('/notas-fiscais', notaFiscalController.listarNotas);
routes.get('/empresas/profile', empresaController.getProfile);
routes.put('/empresas/profile', upload.single('logo'), empresaController.update);
routes.get('/usuarios/profile', usuarioController.getProfile);
routes.put('/usuarios/profile', usuarioController.update);
routes.get('/usuarios/list', usuarioController.listAll);
routes.post('/servicos', servicoController.create);
routes.get('/servicos', servicoController.listByEmpresa);
routes.put('/servicos/:id', servicoController.update);
routes.delete('/servicos/:id', servicoController.delete);
routes.get('/servico-grupos', servicoGrupoController.list);
routes.post('/servico-grupos', servicoGrupoController.create);
routes.put('/servico-grupos/:id', servicoGrupoController.update);
routes.post('/empresas/videos', empresaController.addVideo);
routes.put('/empresas/videos/:videoId', empresaController.updateVideo);
routes.delete('/empresas/videos/:videoId', empresaController.deleteVideo);
routes.post('/avaliacoes', avaliacaoController.create);
routes.post('/funcionarios', funcionarioController.create);
routes.get('/funcionarios', funcionarioController.listByEmpresa);
routes.put('/funcionarios/:id', funcionarioController.update);
routes.post('/agendamentos', agendamentoController.create);
routes.get('/agendamentos', agendamentoController.listByEmpresa);
routes.get('/agendamentos/meus', agendamentoController.listByUsuario);
routes.get('/agendamentos/meus-concluidos', agendamentoController.listConcluidasByUsuario);
routes.get('/agendamentos/:id/detalhes', agendamentoController.getAgendamentoDetails);
routes.patch('/agendamentos/:id/status', agendamentoController.updateStatus);
routes.patch('/agendamentos/:id/finalizar', agendamentoController.finalizarOS);
routes.patch('/agendamentos/:id/cancelar', agendamentoController.cancelByUser);
routes.patch('/agendamentos/:id/funcionario', agendamentoController.updateFuncionario);
routes.post('/agendamentos/:id/servicos', agendamentoController.addServico);
routes.post('/agendamentos/:id/produtos', agendamentoController.addProduto);
routes.get('/relatorios/faturamento', relatorioController.getFaturamento);
routes.get('/relatorios/mailing-clientes', relatorioController.getMailingClientes);
routes.get('/relatorios/dashboard-analytics', relatorioController.getDashboardAnalytics);
routes.get('/relatorios/comissao', comissaoController.getRelatorioComissao);
routes.post('/cashback/promocoes', cashbackController.createPromotion);
routes.get('/cashback/promocoes', cashbackController.listPromotionsByEmpresa);
routes.put('/cashback/promocoes/:id', cashbackController.updatePromotion);
routes.patch('/cashback/promocoes/:id/status', cashbackController.togglePromotionStatus);
routes.get('/meus-vouchers', cashbackController.listMyVouchers);
routes.get('/grupos', grupoController.list);
routes.post('/grupos', grupoController.create);
routes.put('/grupos/:id', grupoController.update);
routes.get('/fornecedores', fornecedorController.list);
routes.post('/fornecedores', fornecedorController.create);
routes.put('/fornecedores/:id', fornecedorController.update);
routes.get('/produtos', produtoController.list);
routes.post('/produtos', produtoController.create);
routes.put('/produtos/:id', produtoController.update);
routes.patch('/produtos/:id/status', produtoController.toggleStatus);
routes.get('/regras-fiscais', fiscalController.listRegras);
routes.post('/regras-fiscais', fiscalController.createRegra);
routes.put('/regras-fiscais/:id', fiscalController.updateRegra);
routes.get('/formas-pagamento', formaPagamentoController.list);
routes.post('/formas-pagamento', formaPagamentoController.create);
routes.put('/formas-pagamento/:id', formaPagamentoController.update);
routes.get('/condicoes-pagamento', condicaoPagamentoController.list);
routes.post('/condicoes-pagamento', condicaoPagamentoController.create);
routes.put('/condicoes-pagamento/:id', condicaoPagamentoController.update);
routes.get('/comissao/regras', comissaoController.listRegras);
routes.post('/comissao/regras', comissaoController.createRegra);
routes.put('/comissao/regras/:id', comissaoController.updateRegra);
routes.post('/notas-fiscais/servico', notaFiscalController.emitirNotaServico);
routes.post('/notas-fiscais/produto', notaFiscalController.emitirNotaProduto);
routes.get('/orcamentos/empresa', orcamentoController.listByEmpresa);
routes.get('/orcamentos/cliente', orcamentoController.listByCliente);
routes.get('/orcamentos/:id', orcamentoController.getById);
routes.post('/orcamentos', upload.array('imagens', 5), orcamentoController.create);
routes.post('/orcamentos/empresa', orcamentoController.createByEmpresa);
routes.put('/orcamentos/empresa/:id', orcamentoController.updateByEmpresa);
routes.post('/orcamentos/:id/aprovar', orcamentoController.clienteAprova);
routes.patch('/orcamentos/cliente/:id/cancelar', orcamentoController.clienteCancela);
routes.get('/empresas/:id', empresaController.getById);
routes.get('/estoque', estoqueController.listarEstoque);
routes.post('/estoque/ajustar', estoqueController.ajustarEstoque);
routes.get('/relatorios/curva-abc', relatorioController.getCurvaABC);
routes.get('/relatorios/auditoria-estoque', relatorioController.getAuditoriaEstoque);
routes.post('/fechamento-estoque/processar', fechamentoEstoqueController.processarInventario);
routes.post('/fechamento-estoque/confirmar', fechamentoEstoqueController.confirmarAjuste);
routes.post('/fechamento-estoque/corrigir', fechamentoEstoqueController.corrigirEstoqueVendaNaoRegistada);
routes.get('/relatorios/posicao-estoque', relatorioController.getPosicaoEstoque);
routes.get('/relatorios/dre', relatorioController.getDRE);

export default routes;